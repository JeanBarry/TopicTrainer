services:
  backend:
    build:
      context: ../
      dockerfile: ./infrastructure/dockerfile
      target: ${ENV}
      args:
        - UID=${UID}
        - GID=${GID}
        - UNAME=${UNAME}
        - GNAME=${GNAME}
    container_name: backend
    user: ${UID}:${GID}
    environment:
      - ENV=${ENV}
      - DEBUG=${DEBUG}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - S3_HOST=${S3_HOST}
      - S3_PORT=${S3_PORT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_REGION=${S3_REGION}
    ports:
      - "5000:5000"
    volumes:
      - ../main.py:/app/main.py
      - ../src:/app/src
    depends_on:
      db:
        condition: service_healthy
    networks:
      - topic-trainer-network

  nginx:
    image: nginx:1.25.2-alpine
    container_name: nginx-proxy
    ports:
      - "81:81"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
    networks:
      - topic-trainer-network

  db:
    image: postgres:15.4-alpine
    container_name: db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - TZ=America/Mexico_City
    ports:
      - "5432:5432"
    volumes:
      - ../db_data:/var/lib/postgresql/data
    networks:
      - topic-trainer-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      timeout: 10s
      retries: 5

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    command: [ "server", "/data", "--console-address", ":9090" ]
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
      MINIO_REGION_NAME: ${S3_REGION}
      MINIO_DOMAIN: ${S3_HOST}
      MINIO_CORS_ENABLE: "true"
      MINIO_CORS_ALLOW_ORIGIN: "*"
    volumes:
      - ../minio_data:/data
    networks:
      - topic-trainer-network

networks:
  topic-trainer-network:
    driver: bridge
    name: topic-trainer-network
